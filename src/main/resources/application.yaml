spring:
  datasource:
    url: jdbc:sqlserver://localhost:1433;databaseName=AuthProject;integratedSecurity=false
    username: DemoDB1
    password: quangvan123
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    show-sql: true
    hibernate:
      dialect: org.hibernate.dialect.SQLServerDialect
      ddl-auto: update
  security:
      oauth2:
        client:
          registration:
            google:
              clientId: 146560137520-2ikv5of57o632dcimgnrsog7por5pa2f.apps.googleusercontent.com
              clientSecret: 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
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 524634499753053
              clientSecret: 48bec3c4f7bcf72efcd96d2f630ce9c7
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
              scope:
                - email
                - public_profile
            github:
              clientId: ebcba0de613f8ae2f529
              clientSecret: 30a0073792b924053feed9fe244abab7cd141957
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000 , http://localhost:8080# Comma separated list of allowed origins
  oauth2: 
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect